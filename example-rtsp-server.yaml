esphome:
  name: example-rtsp-server
  friendly_name: my-esp32cam-rtsp-server
  includes:
    - micro_rtsp
    - esp32cam-rtsp-server.h

esp32:
  board: esp32dev
  framework:
    type: arduino

psram:
  mode: octal
  speed: 80MHz

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "TSPMwbzQg7o5ZghvHGYGURU7VawRuaUWKW79Llftry8="

ota:
  - platform: esphome
    password: "eb8b04c98aaaa66521090ac073acc83c"

wifi:
  networks:                   # Multiple WiFi AP candidates
  - ssid: !secret wifi_ssid_2f
    password: !secret wifi_password
  - ssid: !secret wifi_ssid_1f
    password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.1.77   # Replace with your desired static IP
    gateway: 192.168.1.254    # Replace with your effective gateway
    subnet: 255.255.255.0
    dns1: 192.168.1.254       # Replace with your preferred DNS

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Example-Rtsp-Server Fallback Hotspot"
    password: "BhjkvK5HE5oD"

captive_portal:

custom_component:
  - lambda: |-
      auto Esp32CamRtspServer = new Esp32camRtsp();         // Use default rtsp port 554
      // auto Esp32CamRtspServer = new Esp32camRtsp(8554);  // Use rtsp port 8554
      // auto Esp32CamRtspServer = new Esp32camRtsp(554,4); // Use default rtsp port 554 and max. client count 4
      // auto Esp32CamRtspServer = new Esp32camRtsp(8554,1,0,0,2,-1);  // Use rtsp port 8554, max. client count 1, brightness=2, and saturation=-1
      return {Esp32CamRtspServer};    
    components: 
      - id: my_esp32cam_rtsp_server